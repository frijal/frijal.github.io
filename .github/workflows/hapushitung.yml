name: ðŸ”† Pengecekan & Laporan Konten Harian

on:
  schedule:
    # Setiap hari pukul 06:00 WITA (UTC+8) â†’ 22:00 UTC hari sebelumnya
    - cron: '0 22 * * *'
  workflow_dispatch: # Bisa dijalankan manual

jobs:
  # JOB 1: Membersihkan gambar yang tidak terpakai (orphan)
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cari dan Hapus Gambar Orphan
        id: cleanup_step
        run: |
          echo "ðŸ§¹ Memulai proses pembersihan gambar orphan..."
          DELETED_COUNT=0
          DELETED_FILES=""

          # Pastikan folder img ada
          mkdir -p img

          # Loop semua .webp di folder img/
          shopt -s nullglob
          for webp_file in img/*.webp; do
            base_name=$(basename "$webp_file" .webp)
            html_file="artikel/${base_name}.html"

            # Jika artikel tidak ada -> hapus gambar dari git
            if [ ! -f "$html_file" ]; then
              echo "-> Orphan: '$webp_file' tidak memiliki artikel '$html_file'. Menghapus..."
              git rm -f "$webp_file"
              DELETED_COUNT=$((DELETED_COUNT + 1))
              DELETED_FILES="${DELETED_FILES} ${webp_file}"
            fi
          done
          shopt -u nullglob

          echo "ðŸ§¹ Proses selesai. Total gambar orphan dihapus: $DELETED_COUNT"
          echo "deleted_count=$DELETED_COUNT" >> $GITHUB_OUTPUT

      - name: Commit & Push Hasil Pembersihan (jika ada)
        if: steps.cleanup_step.outputs.deleted_count != '0'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore(cleanup): Hapus ${{ steps.cleanup_step.outputs.deleted_count }} gambar orphan .webp"
          git push

      - name: No Orphan Found
        if: steps.cleanup_step.outputs.deleted_count == '0'
        run: echo "âœ… Tidak ada gambar orphan ditemukan."

  # JOB 2: Menghitung file dan membuat laporan
  reporting:
    # Job ini akan menunggu job 'cleanup' selesai
    needs: cleanup
    runs-on: ubuntu-latest
    permissions:
      contents: write # Diperlukan untuk auto-commit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Variables
        id: vars
        run: |
          TARGETS="artikel img"
          DATE=$(date +'%m-%d')
          REPORT="mini/${DATE}-laporan_konten.txt"
          echo "report_path=$REPORT" >> $GITHUB_OUTPUT
          echo "targets=$TARGETS" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Count Files by Extension
        id: counts
        run: |
          TARGETS="${{ steps.vars.outputs.targets }}"
          declare -A counts
          for ext in html webp png; do
            counts[$ext]=$(find $TARGETS -maxdepth 1 -type f -iname "*.$ext" | wc -l)
          done
          counts[all]=$(find $TARGETS -maxdepth 1 -type f | wc -l)
          for key in "${!counts[@]}"; do
            echo "$key=${counts[$key]}" >> $GITHUB_OUTPUT
          done

      - name: Generate Report
        run: |
          REPORT="${{ steps.vars.outputs.report_path }}"
          DATE="${{ steps.vars.outputs.date }}"
          TARGETS="${{ steps.vars.outputs.targets }}"
          PREFIX_ARTIKEL="https://frijal.pages.dev/artikel/"
          
          mkdir -p "$(dirname "$REPORT")"
          {
            echo "LAPORAN KONTEN: artikel & img ($DATE)"
            echo "================================="
            echo "Total File: ${{ steps.counts.outputs.all }}"
            echo "HTML=${{ steps.counts.outputs.html }}, webp=${{ steps.counts.outputs.webp }}, PNG=${{ steps.counts.outputs.png }}"
            echo ""
            echo "Ringkasan per ekstensi (di semua folder):"
            find $TARGETS -maxdepth 1 -type f -print | sed 's/.*\.//' | sort | uniq -c | sort -nr
            echo ""
            echo "URL File HTML (dari folder 'artikel'):"
            find "artikel" -maxdepth 1 -type f -iname "*.html" | sed "s|^artikel/|$PREFIX_ARTIKEL|g" | sort
          } > "$REPORT"
          
          echo "Laporan berhasil dibuat:"
          cat "$REPORT"

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Buat Badge JSON
        run: |
          mkdir -p mini
          html=${{ steps.counts.outputs.html }}
          webp=${{ steps.counts.outputs.webp }}
          color=$(if (( html > webp )); then echo red; elif (( html < webp )); then echo green; else echo blue; fi)

          jq -n --arg m "$html" '{schemaVersion:1, label:"artikel", message:$m, color:"blue"}' > mini/html_count_badge.json
          jq -n --arg m "$webp" '{schemaVersion:1, label:"cover", message:$m, color:"green"}' > mini/webp_count_badge.json
          jq -n --arg mh "$html" --arg mj "$webp" --arg c "$color" '{schemaVersion:1, label:"html/webp", message:("\($mh) / \($mj)"), color:$c}' > mini/html_webp_badge.json

      - name: Rotate Reports
        run: |
          mkdir -p mini
          mapfile -t files < <(ls -1t mini/*-laporan_*.txt 2>/dev/null)
          if ((${#files[@]} > 7)); then
            printf '%s\n' "${files[@]:7}" | xargs rm -f
          fi

      - name: Commit Laporan & Badge
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update laporan & badge konten"
          file_pattern: mini/*
